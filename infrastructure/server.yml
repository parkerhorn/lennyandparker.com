trigger:
  branches:
    include:
      - main
      - develop
  paths:
    include:
      - 'server/source/**/*.cs'
      - 'server/tests/**/*.cs'
      - 'server/source/**/*.csproj'
      - 'server/tests/**/*.csproj'
      - 'server/WeddingApi.sln'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 8.0 SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
        includePreviewVersions: false

    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet packages'
      inputs:
        command: 'restore'
        projects: 'server/WeddingApi.sln'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: 'server/WeddingApi.sln'
        arguments: '--configuration Release'

    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests'
      inputs:
        command: 'test'
        projects: 'server/tests/WeddingApi.UnitTests/WeddingApi.UnitTests.csproj'
        arguments: '--configuration Release --collect:"XPlat Code Coverage"'

    - task: DotNetCoreCLI@2
      displayName: 'Publish API'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: 'server/source/WeddingApi.csproj'
        arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/api'
        zipAfterPublish: true

    - task: CopyFiles@2
      displayName: 'Copy Integration Tests'
      inputs:
        SourceFolder: 'server/tests/WeddingApi.IntegrationTests'
        Contents: '**/*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/integration-tests'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish all artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy_Dev
  displayName: 'Deploy to Dev'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToDev
    displayName: 'Deploy API to Web App'
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Dev Web App'
            inputs:
              azureSubscription: 'Azure Subscription'
              appName: 'wedding-api-dev'
              package: '$(Pipeline.Workspace)/drop/api/*.zip'
              deploymentMethod: 'auto'
              
  - job: TestDevEnvironment
    displayName: 'Integration Test'
    dependsOn: DeployToDev
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 8.0 SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
        includePreviewVersions: false

    - task: DownloadBuildArtifacts@1
      displayName: 'Download Artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: DotNetCoreCLI@2
      displayName: 'Install dependencies'
      inputs:
        command: 'restore'
        projects: '$(System.ArtifactsDirectory)/drop/integration-tests/WeddingApi.IntegrationTests.csproj'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Run Integration Tests'
      inputs:
        command: 'test'
        projects: '$(System.ArtifactsDirectory)/drop/integration-tests/WeddingApi.IntegrationTests.csproj'
        arguments: '--configuration Release --logger:"console;verbosity=detailed"'
      env:
        API_BASE_URL: 'https://wedding-api-dev.azurewebsites.net'

- stage: Deploy_Prod
  displayName: 'Deploy to Production'
  dependsOn: Deploy_Dev
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToProd
    displayName: 'Deploy API to Web App'
    environment: 'prod'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Prod Web App'
            inputs:
              azureSubscription: 'Azure Subscription'
              appName: 'wedding-api-prod'
              package: '$(Pipeline.Workspace)/drop/api/*.zip'
              deploymentMethod: 'auto'
              
  - job: TestProdEnvironment
    displayName: 'Integration Test'
    dependsOn: DeployToProd
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET 8.0 SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
        includePreviewVersions: false

    - task: DownloadBuildArtifacts@1
      displayName: 'Download Artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: DotNetCoreCLI@2
      displayName: 'Install dependencies'
      inputs:
        command: 'restore'
        projects: '$(System.ArtifactsDirectory)/drop/integration-tests/WeddingApi.IntegrationTests.csproj'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Run Integration Tests'
      inputs:
        command: 'test'
        projects: '$(System.ArtifactsDirectory)/drop/integration-tests/WeddingApi.IntegrationTests.csproj'
        arguments: '--configuration Release --logger:"console;verbosity=detailed"'
      env:
        API_BASE_URL: 'https://wedding-api-prod.azurewebsites.net' 